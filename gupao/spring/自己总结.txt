一、spring面试相关概念
	OOP: 面向对象编程（Object Oriented Programming），用程序描述生活中的一切事务，映射到工作中，就是将需求转换为现实代码；
		主要手段：封装、继承、多态
	BOP: 面向Bean编程（Bean Oriented Programming），java本身就是面向Bean（豆子）编程，将现实的事物用bean来描述
		Bean定义：1.必须有包（不是默认的）；2.成员属性私有化，有get、set方法提供对外访问；3.实现序列化接口；4.有无参构造器
	AOP: 面向切面编程或者说面向规则编程（Aspect Oriented Programming），例如：日志监控、事物、权限等
	IOC: 控制反转（ Inversion of Control）；
		控制了什么？   是控制了对象的创建权力。
		什么正转？     通常我们编程如果A对象，聚合了B对象，就直接在A对象中，new B对象，这种由A来控制B的创建，叫做正转
		怎么体现反转？  在spring中，我们将对象的创建权力，由A对象转移到spring容器中，并且，是由spring容器往A对象中注入，因此我经常说的反转，是指B对象的创建权力由A				 对象转移到了spring容器，因此实现了反转 
	DI: 依赖注入、依赖查找（ Dependency Injection），Spring不仅保存自己创建的对象，而且保存对象与对象之间的关系，并且进行赋值

二、spring前世今生
	spring简化开发四个基本策略：
		1. 基于POJO的轻量级和最小入侵性编程；
		2. 通过依赖注入和面向接口松耦合；
		3. 基于切面和惯性进行声明式编程；
		4. 通过切面和模板减少样板式代码。
	构建源码步骤（spring-framework-5.0.2.RELEASE）
		1. 进入spring官网，点击github图标进入github；
		2. 在github页面上选择需要下载的spring的版本（spring-framework-5.0.2.RELEASE）；
		3. 进入下载完毕的spring源码中，查看build.gradle文件,查看需要什么版本的gradle(gradleVersion = '4.3.1');
		4. 进入gradle官网，下载指定版本的gradle(gradleVersion = '4.3.1');
		5. 配置gradle环境变量，GRADLE_HOME = ""; path = "%GRADLE_HOME%\bin",并进入dos命令，查看是否安装成功 gradle -v;
		6. 用dos命令行进入spring源码文件夹，执行gradlew.bat文件，进行源码构建；
		7. 如果是用eclipse，还需执行该文件夹下的 import-into-eclipse.bat
		8. 打开idea,import -> 选择spring-framework-5.0.2.RELEASE -> 选择gradle构建 -> 选择[Use auto-import]、[Create directories for empty content roots automatically]、[Ceate separate modele per source set]、[Use local gradle distribution]
		9. 设置gradle 本地仓库 创建环境变量 GRADLE_USER_HOME = ""
		10. 在环境本地仓库添加init.gradle文件

三、spring实现的基本思路
	查看源码思路： 1. 从宏观了解源码的流程，不要一开始就debugger,会越看越乱
				  2. 要从类的生命周期去寻找入口；
	举例说明mvc流程： 前台访问路径 -> web.xml中找到dispatcherServlet -> dispatcherServlet中有init()、service()、destory() -> .......